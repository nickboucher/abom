#!/usr/bin/env python3

from sys import argv, exit
from os import environ
from subprocess import run
from tempfile import NamedTemporaryFile
from bloom_filter2 import BloomFilter

def main():
    # Validate arguments
    if len(argv) != 3:
        exit("Usage: abom-check <binary> <hash>")
    # Set verbosity
    verbose = environ.get('ABOM_VERBOSE') == '1'
    # Extract Bloom Filter from binary
    binary = argv[1]
    with NamedTemporaryFile() as bf_file:
        hash = argv[2]
        extract = run(f'llvm-objcopy --dump-section=__ABOM,__abom={bf_file.name} {binary}', shell=True)
        if extract.returncode != 0:
            exit("Could not extract Bloom Filter.")
        # Load Bloom Filter
        with BloomFilter(max_elements=100000, error_rate=1e-7, filename=(bf_file.name,-1)) as bf:
            # Check hash
            if hash in bf:
                print("Present")
            else:
                print("Absent")

if __name__ == '__main__':
    main()